/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mdbudget;


import javafx.application.Application;
import javafx.stage.Stage;
// import mdbudget.scenes.client.LandingPage;
import mdbudget.scenes.client.LoginPage;

public class App extends Application {
    protected Stage mainStage;
    protected final double widthPanel = 400;
    protected final double heightPanel = 800;

    public static void main(String[] args) {
        System.out.println("Launching...");
        launch(args);
    }

    @Override
    public void start(Stage stage) throws Exception {
        
        LoginPage landingPageScene = new LoginPage(stage);
        landingPageScene.show();
        stage.setTitle("CMBurger");
        stage.setResizable(false);
        stage.setHeight(heightPanel);
        stage.setWidth(widthPanel);
        stage.show();
        System.out.println("test");

    }

    public Object getGreeting() {
        return null;
    }
    
}
    // public void menuPage(){
    // Button button = new Button("Pindah Page");
    // button.setOnAction(action -> {
    // loginPage();
    // });
    // Scene scene = new Scene(button, 400, 600);
    // //
    // scene.getStylesheets().add(getClass().getResource("/styles/styleApp.css").toExternalForm());

    // mainStage.setScene(scene);
    // }

    // public void landingPage() {
    //     final int logoWidth = 200;
    //     final int logoHeight = 150;

    //     Label loginLabel = new Label("Login");

    //     ImageView brandLogo = new ImageView(new Image(getClass().getResource("/images/burger.png").toString(),
    //             logoWidth, logoHeight, false, false));

    //     StackPane brandContainer = new StackPane(brandLogo);

    //     TextField username = new TextField();
    //     PasswordField password = new PasswordField();

    //     VBox formContainer = new VBox();
    //     formContainer.getChildren().addAll(username, password);
    //     formContainer.setSpacing(15);

    //     Button loginButton = new Button("Login");
    //     loginButton.setOnAction(action -> {
    //         String formUsername = username.getText();
    //         String formPassword = password.getText();

    //         boolean user = UserController.loginUser(formUsername, formPassword);

    //         if (user) {
    //             menuPage();
    //         }
    //         // loginUser(formUsername,formPassword);
    //     });

    //     Button adminLoginButton = new Button("Login Admin");
    //     adminLoginButton.setOnAction(action -> {
    //         // TODO make function that check if user is success to login
    //         // TODO redirect to managementPage() if success login;

    //     });

    //     HBox notLoginContainer = new HBox();
    //     notLoginContainer.getChildren().addAll(adminLoginButton);
    //     notLoginContainer.setAlignment(Pos.BASELINE_CENTER);
    //     notLoginContainer.setSpacing(10);
    //     // StackPane stackPane = new StackPane();
    //     // stackPane.getChildren().add(brandLogo);

    //     VBox layout = new VBox();
    //     layout.getChildren().addAll(loginLabel, brandContainer, formContainer, loginButton, notLoginContainer);
    //     layout.setAlignment(Pos.TOP_CENTER);
    //     layout.setSpacing(20);

    //     Scene scene = new Scene(layout, width, height);

    //     mainStage.setScene(scene);
    // }


    // public void loginPage() {
    //     final int logoWidth = 200;
    //     final int logoHeight = 150;

    //     Label loginLabel = new Label("Login");

    //     ImageView brandLogo = new ImageView(new Image(getClass().getResource("/images/burger.png").toString(),
    //             logoWidth, logoHeight, false, false));

    //     StackPane brandContainer = new StackPane(brandLogo);

    //     TextField username = new TextField();
    //     PasswordField password = new PasswordField();

    //     VBox formContainer = new VBox();
    //     formContainer.getChildren().addAll(username, password);
    //     formContainer.setSpacing(15);

    //     Button loginButton = new Button("Login");
    //     loginButton.setOnAction(action -> {
    //         String formUsername = username.getText();
    //         String formPassword = password.getText();

    //         Boolean user = UserController.loginUser(formUsername, formPassword);

    //         if (user) {
    //             menuPage();
    //         }
    //         // loginUser(formUsername,formPassword);
    //     });

    //     Button adminLoginButton = new Button("Login Admin");
    //     adminLoginButton.setOnAction(action -> {
    //         // TODO make function that check if user is success to login
    //         // TODO redirect to managementPage() if success login;

    //     });

    //     HBox notLoginContainer = new HBox();
    //     notLoginContainer.getChildren().addAll(adminLoginButton);
    //     notLoginContainer.setAlignment(Pos.BASELINE_CENTER);
    //     notLoginContainer.setSpacing(10);
    //     // StackPane stackPane = new StackPane();
    //     // stackPane.getChildren().add(brandLogo);

    //     VBox layout = new VBox();
    //     layout.getChildren().addAll(loginLabel, brandContainer, formContainer, loginButton, notLoginContainer);
    //     layout.setAlignment(Pos.TOP_CENTER);
    //     layout.setSpacing(20);

    //     Scene scene = new Scene(layout, width, height);

    //     mainStage.setScene(scene);
    // }

    // // private void loginUser(String formUsername, String formPassword) {
    // // }

    // public void menuPage() {
    //     final int itemLogoWidth = 25;
    //     final int itemLogoHeight = 25;

    //     Label menuLabel = new Label("Menu");

    //     FlowPane menuContainer = new FlowPane();
    //     menuContainer.setHgap(20);
    //     menuContainer.setVgap(10);
    //     menuContainer.setAlignment(Pos.BASELINE_CENTER);

    //     System.out.println(listOrder);

    //     ArrayList<Menu> listMenu = MenuController.getAllData();
    //     // System.out.println(listMenu);
    //     Button[] data = new Button[listMenu.size()];
    //     int i = 0;
    //     for (Menu menu : listMenu) {
    //         VBox buttonView = new VBox();
    //         Label menuNama = new Label(menu.getMenuNama());
    //         Image gambar = new Image(getClass().getResource("/images/mcdonalds.png").toString(),
    //                 itemLogoWidth, itemLogoHeight, false, false);

    //         ImageView menuGambar = new ImageView(gambar);

    //         buttonView.getChildren().addAll(menuGambar, menuNama);
    //         buttonView.setAlignment(Pos.BASELINE_CENTER);

    //         data[i] = new Button();
    //         data[i].setGraphic(buttonView);
    //         menuContainer.getChildren().add(data[i]);

    //         data[i].setOnAction(event -> {
    //             boolean existsInOrder = false;
    //             for (OrderDetail order : listOrder) {
    //                 Menu test = order.getOrderDetailMenu();
    //                 if (test.equals(menu)) {
    //                     existsInOrder = true;
    //                     listOrder.remove(order);
    //                     break;
    //                 }
    //             }

    //             if (existsInOrder) {
    //                 // Order already exists in the list
    //                 data[i].setStyle("-fx-background-color: red;");
    //             } else {
    //                 OrderDetail newOrder = new OrderDetail(menu);
    //                 listOrder.add(newOrder);
    //                 data[i].setStyle("-fx-background-color: green;");
    //             }
    //         });
    //     }

    //     VBox vbox = new VBox();
    //     vbox.getChildren().addAll(menuLabel, menuContainer);
    //     vbox.setAlignment(Pos.BASELINE_CENTER);

    //     AnchorPane anchorPane = new AnchorPane();

    //     // Create buttons and set their positions using anchors
    //     Button orderButton = new Button("order List");
    //     AnchorPane.setBottomAnchor(orderButton, 10.0);
    //     AnchorPane.setLeftAnchor(orderButton, 10.0);
    //     AnchorPane.setRightAnchor(orderButton, 10.0);
    //     orderButton.setOnAction(action -> {
    //         // if(listOrder.size() > 0){
    //         // cartPage();
    //         // }
    //         cartPage();
    //     });

    //     // Add buttons to the AnchorPane
    //     anchorPane.getChildren().addAll(orderButton);

    //     BorderPane mainPane = new BorderPane();
    //     // mainPane.setTop(menuLabel);
    //     // mainPane.setCenter(menuContainer);
    //     mainPane.setTop(vbox);
    //     mainPane.setBottom(anchorPane);

    //     Scene scene = new Scene(mainPane, width, height);

    //     mainStage.setScene(scene);
    // }

    // public Object getGreeting() {
    //     return null;
    // }

    // public void cartPage() {

    //     Label cartLabel = new Label("Cart");

    //     // System.out.println("Number of orders: " + listOrder.size());

    //     ObservableList<OrderDetail> orders = FXCollections.observableArrayList();

    //     orders.addAll(listOrder);

    //     Label total = new Label();

    //     // System.out.println("Number of orders: " + orders.size());

    //     TableView<OrderDetail> cartTable = new TableView<>();

    //     TableColumn<OrderDetail, String> menuNameCol = new TableColumn<>("Name");
    //     menuNameCol.setCellValueFactory(
    //             param -> new SimpleStringProperty(param.getValue().getOrderDetailMenu().getMenuNama()));

    //     TableColumn<OrderDetail, Integer> menuQuantityCol = new TableColumn<>("Amount");
    //     menuQuantityCol.setCellValueFactory(new PropertyValueFactory<>("orderDetailMenuAmount"));

    //     TableColumn<OrderDetail, Integer> menuPriceCol = new TableColumn<>("Price");
    //     menuPriceCol.setCellValueFactory(
    //             param -> new SimpleIntegerProperty(param.getValue().getOrderDetailMenu().getMenuHarga()).asObject());

    //     TableColumn<OrderDetail, Void> menuActionCol = new TableColumn<>("Action");
    //     menuActionCol.setCellFactory(param -> new TableCell<OrderDetail, Void>() {
    //         private void calculateTotalPrice() {
    //             double totalPrice = 0.0;
    //             for (OrderDetail order : cartTable.getItems()) {
    //                 Double price = menuPriceCol.getCellObservableValue(order).getValue().doubleValue()
    //                         * menuQuantityCol.getCellObservableValue(order).getValue().doubleValue();
    //                 if (price != null) {
    //                     totalPrice += price;
    //                 }
    //             }
    //             total.setText("Total: " + Double.toString(totalPrice));
    //         }

    //         private final Button plusButton = new Button("+");
    //         private final Button minusButton = new Button("-");
    //         private final Button deleteButton = new Button("!");

    //         {
    //             plusButton.setOnAction(event -> {
    //                 OrderDetail order = getTableView().getItems().get(getIndex());

    //                 order.setOrderDetailMenuAmount(order.getOrderDetailMenuAmount() + 1);
    //                 int index = listOrder.indexOf(order);
    //                 if (index != -1) {
    //                     OrderDetail updatedOrder = listOrder.get(index);
    //                     updatedOrder.setOrderDetailMenuAmount(order.getOrderDetailMenuAmount());
    //                     // Update any other properties if necessary
    //                     listOrder.set(index, updatedOrder);
    //                 }
    //                 cartTable.refresh();
    //                 calculateTotalPrice();
    //             });

    //             minusButton.setOnAction(event -> {
    //                 OrderDetail order = getTableView().getItems().get(getIndex());
    //                 if (order.getOrderDetailMenuAmount() == 1) {
    //                     orders.remove(order);
    //                 } else {

    //                     order.setOrderDetailMenuAmount(order.getOrderDetailMenuAmount() - 1);
    //                 }

    //                 int index = listOrder.indexOf(order);
    //                 if (index != -1) {
    //                     OrderDetail updatedOrder = listOrder.get(index);
    //                     updatedOrder.setOrderDetailMenuAmount(order.getOrderDetailMenuAmount());
    //                     // Update any other properties if necessary
    //                     listOrder.set(index, updatedOrder);
    //                 }
    //                 cartTable.refresh();
    //                 calculateTotalPrice();
    //             });

    //             deleteButton.setOnAction(event -> {
    //                 OrderDetail order = getTableView().getItems().get(getIndex());
    //                 // Handle edit button action for the specific menu item
    //                 // System.out.println("Edit button clicked for: " +
    //                 // order.getOrderDetailMenu().getMenuNama());

    //                 orders.remove(order);

    //                 int index = listOrder.indexOf(order);
    //                 if (index != -1) {
    //                     OrderDetail updatedOrder = listOrder.get(index);
    //                     listOrder.remove(updatedOrder);
    //                 }
    //                 // orders.clear();
    //                 // orders.addAll(listOrder);
    //                 cartTable.refresh();
    //                 calculateTotalPrice();
    //             });
    //         }

    //         @Override
    //         protected void updateItem(Void item, boolean empty) {
    //             super.updateItem(item, empty);
    //             if (empty) {
    //                 setGraphic(null);
    //                 setText(null);
    //             } else {
    //                 HBox buttonsBox = new HBox(plusButton, minusButton, deleteButton);
    //                 buttonsBox.setSpacing(5.0);
    //                 setGraphic(buttonsBox);
    //                 setText(null);
    //             }
    //         }
    //     });

    //     menuNameCol.setPrefWidth(180); // Set the preferred width of the Name column to 200 pixels
    //     menuQuantityCol.setPrefWidth(90); // Set the preferred width of the Amount column to 100 pixels
    //     menuPriceCol.setPrefWidth(90); // Set the preferred width of the Price column to 100 pixels

    //     cartTable.getColumns().add(menuNameCol);
    //     cartTable.getColumns().add(menuQuantityCol);
    //     cartTable.getColumns().add(menuPriceCol);
    //     cartTable.getColumns().add(menuActionCol);

    //     cartTable.setPadding(new Insets(0, 20, 0, 20));

    //     cartTable.setItems(orders);

    //     double totalPrice = 0.0;
    //     for (OrderDetail order : cartTable.getItems()) {
    //         double price = menuPriceCol.getCellObservableValue(order).getValue().doubleValue()
    //                 * menuQuantityCol.getCellObservableValue(order).getValue().doubleValue();
    //         totalPrice += price;
    //     }
    //     total.setText("Total: " + Double.toString(totalPrice));
    //     // ? optional
    //     // TableColumn<String, String> menuTotalCol =new TableColumn<>("Total");
    //     // menuTotalCol.setCellValueFactory(new PropertyValueFactory<>("Total"));

    //     // * how to get totalPrice

    //     // System.out.println("Total Price: " + totalPrice);

    //     VBox vbox = new VBox();
    //     vbox.getChildren().addAll(cartLabel, cartTable);
    //     vbox.setAlignment(Pos.TOP_CENTER);
    //     vbox.getChildren().add(total);
    //     vbox.setAlignment(Pos.CENTER_LEFT);

    //     AnchorPane anchorPane = new AnchorPane();

    //     // Create buttons and set their positions using anchors
    //     Button menuPageButton = new Button("Menu List");
    //     menuPageButton.prefWidth((width / 2) - 10.0);
    //     AnchorPane.setBottomAnchor(menuPageButton, 10.0);
    //     AnchorPane.setLeftAnchor(menuPageButton, 10.0);
    //     AnchorPane.setRightAnchor(menuPageButton, (double) width / 2 + 5);
    //     menuPageButton.setOnAction(action -> {
    //         menuPage();
    //     });

    //     Button orderButton = new Button("Order");
    //     AnchorPane.setBottomAnchor(orderButton, 10.0);
    //     AnchorPane.setLeftAnchor(orderButton, (double) width / 2 + 5);
    //     AnchorPane.setRightAnchor(orderButton, 10.0);
    //     orderButton.setOnAction(event -> {

    //         orderPage();
    //     });

    //     //
    //     orderButton.prefWidthProperty().bind(anchorPane.widthProperty().divide(2));

    //     // Add buttons to the AnchorPane
    //     anchorPane.getChildren().addAll(menuPageButton, orderButton);

    //     BorderPane mainPane = new BorderPane();
    //     // mainPane.setTop(menuLabel);
    //     // mainPane.setCenter(menuContainer);
    //     mainPane.setTop(vbox);
    //     mainPane.setBottom(anchorPane);

    //     Scene scene = new Scene(mainPane, width, height);

    //     mainStage.setScene(scene);
    // }

    // void orderPage() {
    //     Label text = new Label("terima kasih");

    //     VBox vbox = new VBox();
    //     vbox.getChildren().add(text);
    //     vbox.setAlignment(Pos.TOP_CENTER);

    //     try {
    //         Thread.sleep(2000);
    //         loginPage();
    //     } catch (Exception e) {
    //         // TODO: handle exception
    //     }

    //     Scene scene = new Scene(vbox, width, height);

    //     mainStage.setScene(scene);
    // }

    // public void start() {
    // // Create an AnchorPane
    // AnchorPane anchorPane = new AnchorPane();

    // // Create a Button
    // Button button = new Button("Click me");
    // Button button1 = new Button("Click me");

    // // Add the Button to the AnchorPane
    // anchorPane.getChildren().addAll(button,button1);

    // // Set the anchors to center the Button
    // AnchorPane.setBottomAnchor(button, 10.0);
    // AnchorPane.setLeftAnchor(button, 10.0);
    // AnchorPane.setRightAnchor(button, 205.0);
    // AnchorPane.setBottomAnchor(button1, 10.0);
    // AnchorPane.setLeftAnchor(button1, 205.0);
    // AnchorPane.setRightAnchor(button1, 10.0);

    // // System.out.println(an);

    // // Create a Scene with the AnchorPane
    // Scene scene = new Scene(anchorPane, 400, 300);

    // // Set the Scene to the primary stage
    // mainStage.setScene(scene);
    // mainStage.show();


// // public static void main(String[] args) {
// // launch(args);
// // }
